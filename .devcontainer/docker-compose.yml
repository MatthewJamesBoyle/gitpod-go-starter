services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: todos
      POSTGRES_PASSWORD: todos
      POSTGRES_USER: todos
    ports:
      - "5432:5432"

  app:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    depends_on:
      - db
      - kafka
    ports:
      - "8080:8080"
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: todos
      POSTGRES_PASSWORD: todos
      POSTGRES_DB: todos
      KAFKA_BROKER: kafka:9092