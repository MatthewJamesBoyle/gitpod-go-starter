// .devcontainer/devcontainer.json

{
  "name": "golang-starter",
  // Compose file is referenced relatively, from inside .devcontainer folder
  "dockerComposeFile": [ "docker-compose.yml" ],
  // Service name from docker-compose.yml
  "service": "app",
  // Where VS Code (or Gitpod) opens the project inside the container
  "workspaceFolder": "/workspace",
  // Ports to forward
  "forwardPorts": [8080, 5432, 9092, 2181],

  "customizations": {
    "vscode": {
      "extensions": [
        "golang.go",
        "streetsidesoftware.code-spell-checker",
        "ms-azuretools.vscode-docker",
        "eamodio.gitlens",
        "prettiermd.vscode-prettier-md"
      ],
      "settings": {
        "go.formatTool": "gofmt",
        "go.useLanguageServer": true,
        "[go]": {
          "editor.formatOnSave": true,
          "editor.codeActionsOnSave": {
            "source.organizeImports": true
          },
          "editor.defaultFormatter": "golang.go"
        },
        "editor.formatOnSave": true,
        "files.eol": "\n"
      },
      "launch": {
        "configurations": [
          {
            "name": "Launch Package",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "program": "${workspaceFolder}"
          }
        ]
      }
    }
  },

  // Command after container is up (optional)
  "postCreateCommand": "echo 'Container created, downloading Go modules...' && go mod download"
}